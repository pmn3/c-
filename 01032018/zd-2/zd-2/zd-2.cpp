// zd-2.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h" 
#include "conio.h" 
// Подключение библиотечных подпрограмм 
// вычисления математических функций. 
#include "math.h" 
// perecod.h самостоятельно создання функция  для примера
#include "perecod.h"
//заголовок функции Ruc, описание см. ниже. 
//char* Ruc(char s[]);

int _tmain(int argc, _TCHAR* argv[])
{
	// ОБЪЯВЛЕНИЯ ПЕРЕМЕННЫХ 
	double const g = 9.8; /*Именованная константа,
						 представляющая ускорение. */
	double T;/*Переменная вещественного типа, которая будет
			представлять искомое время. */
	int S;//Переменная целого типа, представляющая длину пути. 
	// ОПЕРАТОРЫ 
	//Вывод приглашения к вводу значения переменной S . 
	//Знак \ в конце строки первой строки оператора обозначает 
	//перенос текста константы на начало новой строки. 
	printf(Ruc("Программа вычисляет время, за которое тело при ускорении %f\n пройдёт заданный путь.\n"), g); 
		printf(Ruc("Введите длину пути в метрах: "));
	//Ввод значения переменной S. 
	scanf_s("%d", &S);
	//Вычисление времени движения тела на заданном пути. 
	//Математическая функция sqrt извлекает квадратный корень. 
	T = sqrt(S * 2 / g);
	//Вывод результата с пояснениями. 
	printf("%s T=%f", Ruc("Путь будет пройден за "), T);
	printf("%s\n", Ruc(" секунд."));
	//Задержка закрытия окна программы до нажатия клавиши. 
	_getch();
	return 0;
}
/*char* Ruc(char s[])
{ //Функция перекодирования русских букв 
	//для вывода в окно программы. 
	int i;
	static char ss[257];
	for (i = 0; s[i] != '\0'; i++)
	{
		if (s[i] >= -64 && s[i] <= -17)
			ss[i] = (-64 + s[i]); //А..п 
		else if (s[i] >= -16 && s[i] <= 0)
			ss[i] = (char)(-16 + s[i]); //р..я 
		else if (s[i] == -72)
			ss[i] = (char)(-15); //ё 
		else if (s[i] == -88)
			ss[i] = (char)(-16); //Ё 
		else
			ss[i] = s[i];
	}
	ss[i] = '\0';
	return ss;
}
*/